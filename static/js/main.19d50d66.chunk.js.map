{"version":3,"sources":["components/Header.js","components/Cards.js","getID.js","App.js","shuffle.js","index.js"],"names":["Header","score","level","bestScore","className","Cards","characters","changeScore","console","log","map","character","index","onClick","id","src","image","alt","IDList","getID","Math","floor","random","includes","push","App","useState","setScore","setBest","setCharacters","clickedCharacters","setClickedCharacters","useEffect","loadCharacters","a","getCharacters","gameOver","alert","fetch","response","json","forEach","char","quote","some","c","clickedCharacter","find","prevScore","arr","i","length","j","temp","shuffle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19d50d66.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Header.css';\n\nconst Header = ({ score, level, bestScore }) => {\n  return (\n    <div className='container'>\n      <div className='header'>\n        <div className='title'>\n          <h1>Memory Game</h1>\n        </div>\n        <div className='game-info'>\n          <div className='score'>Score: {score}</div>\n          <div className='highScore'>High Score: {bestScore}</div>\n          <div className='gameLevel'>Level: {level}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport '../css/Cards.css';\nconst Cards = ({ characters, changeScore }) => {\n  console.log(characters);\n  return (\n    <>\n      <div className='card-grid'>\n        {characters.map((character, index) => (\n          <div\n            key={index}\n            className='card'\n            onClick={() => {\n              changeScore(character.id);\n            }}\n          >\n            <div className='card-image'>\n              <img src={character.image} alt='' />\n            </div>\n            <div className='card-footer'>{character.character}</div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Cards;\n","const IDList = [];\n\nconst getID = () => {\n  let id = Math.floor(Math.random() * 100000 + 100);\n\n  if (IDList.includes(id)) {\n    console.log('repeat');\n    getID();\n  } else {\n    IDList.push(id);\n    return id;\n  }\n};\n\nexport default getID;\n","import './App.css';\nimport Header from './components/Header';\nimport Cards from './components/Cards';\nimport { useState, useEffect } from 'react';\nimport getID from './getID';\nimport shuffle from './shuffle';\n\nfunction App() {\n  const [level, setLevel] = useState(1);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBest] = useState(0);\n  const [characters, setCharacters] = useState([]);\n  const [clickedCharacters, setClickedCharacters] = useState([]);\n\n  useEffect(() => {\n    const loadCharacters = async () => {\n      setCharacters(await getCharacters());\n    };\n\n    loadCharacters();\n  }, []);\n\n  const changeScore = (id) => {\n    if (clickedCharacters.some((c) => c.id === id)) {\n      gameOver();\n    } else {\n      const clickedCharacter = characters.find((c) => c.id === id);\n\n      setClickedCharacters([...clickedCharacters, clickedCharacter]);\n\n      setScore((prevScore) => prevScore + 1);\n      setCharacters(shuffle(characters));\n    }\n  };\n\n  const gameOver = async () => {\n    setScore(0);\n    setBest(0);\n    setCharacters(await getCharacters());\n    setClickedCharacters([]);\n    alert('Game Over');\n  };\n  const getCharacters = async () => {\n    let characters = [];\n    let response = await fetch(\n      'https://thesimpsonsquoteapi.glitch.me/quotes?count=5',\n    );\n\n    response = await response.json();\n\n    response.forEach((char) => {\n      const id = getID();\n      const character = char.character;\n      const quote = char.quote;\n      const image = char.image;\n\n      characters.push({ id, character, quote, image });\n    });\n\n    console.log(characters);\n    return characters;\n  };\n\n  return (\n    <>\n      <Header level={level} score={score} bestScore={bestScore} />\n      <Cards characters={characters} changeScore={changeScore} />\n    </>\n  );\n}\n\nexport default App;\n","export default function shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n\n    if (arr[i].id !== arr[j].id) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}